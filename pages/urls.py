# pages/urls.py

from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import PageViewSet, SectionViewSet

# Create a router and register our PageViewSet with it.
router = DefaultRouter()
router.register(r'pages', PageViewSet, basename='page')

# Define URL patterns for the SectionViewSet manually.
# This allows us to create the desired nested structure: /pages/<page_pk>/sections/
section_list = SectionViewSet.as_view({
    'get': 'list',
    'post': 'create'
})

section_detail = SectionViewSet.as_view({
    'get': 'retrieve',
    'put': 'update',
    'patch': 'partial_update',
    'delete': 'destroy'
})

section_update_order = SectionViewSet.as_view({
    'post': 'update_order'
})


# The final URL patterns for our app
urlpatterns = [
    # Include the URLs generated by the router for the PageViewSet
    # This gives us /pages/ and /pages/<pk>/
    path('', include(router.urls)),
    
    # Manually define the nested URLs for Sections
    path('pages/<int:page_pk>/sections/', section_list, name='page-section-list'),
    path('pages/<int:page_pk>/sections/update-order/', section_update_order, name='page-section-update-order'),
    path('pages/<int:page_pk>/sections/<int:pk>/', section_detail, name='page-section-detail'),
]